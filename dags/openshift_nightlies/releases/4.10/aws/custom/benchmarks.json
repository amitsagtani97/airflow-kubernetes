{
    "benchmarks": [
        {
            "name": "scale_25",
            "workload": "scale-perf",
            "command": "./run_scale_fromgit.sh",
            "env": {
                "SCALE": "25",
                "METADATA_COLLECTION": "true",
                "WORKLOAD_NODE_ROLE": "workload",
                "RUNS": "1"
            }
        },
        {
            "name": "cluster_density",
            "workload": "kube-burner",
            "command": "./run_clusterdensity_test_fromgit.sh",
            "env": {
                "JOB_ITERATIONS": "500",
                "JOB_TIMEOUT": "18000",
                "STEP_SIZE": "30s",
                "QPS": "20",
                "BURST": "20",
                "METRICS_PROFILE": "metrics-aggregated.yaml",
                "LOG_LEVEL": "info",
                "LOG_STREAMING": "true",
                "CLEANUP_WHEN_FINISH": "true",
                "CLEANUP": "true",
                "MUST_GATHER_EACH_TASK": "true",
                "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
            }
        },
        {
            "name": "node_density",
            "workload": "kube-burner",
            "command": "./run_nodedensity_test_fromgit.sh",
            "env": {
                "PODS_PER_NODE": "250",
                "NODE_COUNT": "25",
                "JOB_TIMEOUT": "18000",
                "QPS": "20",
                "BURST": "20",
                "STEP_SIZE": "30s",
                "METRICS_PROFILE": "metrics.yaml",
                "LOG_LEVEL": "info",
                "LOG_STREAMING": "true",
                "CLEANUP_WHEN_FINISH": "true",
                "CLEANUP": "true",
                "MUST_GATHER_EACH_TASK": "true",
                "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
            }
        },
        {
            "name": "node_density_heavy",
            "workload": "kube-burner",
            "command": "./run_nodedensity-heavy_test_fromgit.sh",
            "env": {
                "PODS_PER_NODE": "250",
                "NODE_COUNT": "25",
                "JOB_TIMEOUT": "18000",
                "QPS": "20",
                "BURST": "20",
                "STEP_SIZE": "30s",
                "METRICS_PROFILE": "metrics.yaml",
                "LOG_LEVEL": "info",
                "LOG_STREAMING": "true",
                "CLEANUP_WHEN_FINISH": "true",
                "CLEANUP": "true"
            }
        },  
        {
            "name": "scale_50",
            "workload": "scale-perf",
            "command": "./run_scale_fromgit.sh",
            "env": {
                "SCALE": "50",
                "METADATA_COLLECTION": "true",
                "WORKLOAD_NODE_ROLE": "workload",
                "RUNS": "1"
            }
        },
        {
            "name": "host_network",
            "workload": "network-perf",
            "command": "./run_hostnetwork_network_test_fromgit.sh test_cloud",
            "env": {
                "COMPARE": "false",
                "ENABLE_SNAPPY_BACKUP": "true",
                "MULTI_AZ": "false",
                "EMAIL_ID_FOR_RESULTS_SHEET": "asagtani@redhat.com"
            }
        },
        {
            "name": "pod_network",
            "workload": "network-perf",
            "command": "./run_pod_network_test_fromgit.sh test_cloud",
            "env": {
                "COMPARE": "false",
                "ENABLE_SNAPPY_BACKUP": "true",
                "MULTI_AZ": "false",
                "EMAIL_ID_FOR_RESULTS_SHEET": "asagtani@redhat.com"
            }
        },
        {
            "name": "serviceip_network",
            "workload": "network-perf",
            "command": "./run_serviceip_network_test_fromgit.sh test_cloud",
            "env": {
                "COMPARE": "false",
                "ENABLE_SNAPPY_BACKUP": "true",
                "MULTI_AZ": "false",
                "EMAIL_ID_FOR_RESULTS_SHEET": "asagtani@redhat.com"
            }
        },
        {
            "name": "scale_down_25",
            "workload": "scale-perf",
            "command": "./run_scale_fromgit.sh",
            "env": {
                "SCALE": "25",
                "METADATA_COLLECTION": "true",
                "WORKLOAD_NODE_ROLE": "workload"
            }
        },
        {
            "name": "router",
            "workload": "router-perf-v2",
            "command": "./ingress-performance.sh",
            "env": {
                "THROUGHPUT_TOLERANCE": "10",
                "LATENCY_TOLERANCE": "10",
                "LARGE_SCALE_THRESHOLD": "19",
                "ENGINE": "local",
                "LARGE_SCALE_ROUTES": "500",
                "COMPARE": "false",
                "EMAIL_ID_FOR_RESULTS_SHEET": "asagtani@redhat.com" 
            }
        },
        {
            "name": "scale_100",
            "workload": "scale-perf",
            "command": "./run_scale_fromgit.sh",
            "env": {
                "SCALE": "100",
                "METADATA_COLLECTION": "true",
                "WORKLOAD_NODE_ROLE": "workload",
                "RUNS": "1"
            }
        },
        {
            "name": "cluster_density_100_1k",
            "workload": "kube-burner",
            "command": "./run_clusterdensity_test_fromgit.sh",
            "env": {
                "JOB_ITERATIONS": "1000",
                "JOB_TIMEOUT": "18000",
                "STEP_SIZE": "30s",
                "QPS": "20",
                "BURST": "20",
                "METRICS_PROFILE": "metrics-aggregated.yaml",
                "LOG_LEVEL": "info",
                "LOG_STREAMING": "true",
                "CLEANUP_WHEN_FINISH": "true",
                "CLEANUP": "true",
                "MUST_GATHER_EACH_TASK": "true",
                "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
            }
        },
    {
        "name": "scale_250",
        "workload": "scale-perf",
        "command": "./run_scale_fromgit.sh",
        "env": {
            "SCALE": "250",
            "METADATA_COLLECTION": "true",
            "WORKLOAD_NODE_ROLE": "workload",
            "RUNS": "1"
        }
    },
    {
        "name": "cluster_density_250_2k",
        "workload": "kube-burner",
        "command": "./run_clusterdensity_test_fromgit.sh",
        "env": {
            "JOB_ITERATIONS": "2000",
            "JOB_TIMEOUT": "18000",
            "STEP_SIZE": "30s",
            "QPS": "20",
            "BURST": "20",
            "METRICS_PROFILE": "metrics-aggregated.yaml",
            "LOG_LEVEL": "info",
            "LOG_STREAMING": "true",
            "CLEANUP_WHEN_FINISH": "true",
            "CLEANUP": "true",
            "MUST_GATHER_EACH_TASK": "true",
            "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
        }
    },
    {
        "name": "cluster_density_250_4k",
        "workload": "kube-burner",
        "command": "./run_clusterdensity_test_fromgit.sh",
        "env": {
            "JOB_ITERATIONS": "4000",
            "JOB_TIMEOUT": "18000",
            "STEP_SIZE": "30s",
            "QPS": "20",
            "BURST": "20",
            "METRICS_PROFILE": "metrics-aggregated.yaml",
            "LOG_LEVEL": "info",
            "LOG_STREAMING": "true",
            "CLEANUP_WHEN_FINISH": "true",
            "CLEANUP": "true",
            "MUST_GATHER_EACH_TASK": "true",
            "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
        }
    },
    {
        "name": "scale_500",
        "workload": "scale-perf",
        "command": "./run_scale_fromgit.sh",
        "env": {
            "SCALE": "250",
            "METADATA_COLLECTION": "true",
            "WORKLOAD_NODE_ROLE": "workload",
            "RUNS": "1"
        }
    },
    {
        "name": "cluster_density_500_4k",
        "workload": "kube-burner",
        "command": "./run_clusterdensity_test_fromgit.sh",
        "env": {
            "JOB_ITERATIONS": "4000",
            "JOB_TIMEOUT": "18000",
            "STEP_SIZE": "30s",
            "QPS": "20",
            "BURST": "20",
            "METRICS_PROFILE": "metrics-aggregated.yaml",
            "LOG_LEVEL": "info",
            "LOG_STREAMING": "true",
            "CLEANUP_WHEN_FINISH": "true",
            "CLEANUP": "true",
            "MUST_GATHER_EACH_TASK": "true",
            "NODE_SELECTOR": "{node-role.kubernetes.io/workload: }"
        }
    }
    ]

}